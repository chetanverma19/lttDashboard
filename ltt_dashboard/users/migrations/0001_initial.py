# Generated by Django 4.0.6 on 2022-07-08 08:29

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import ltt_dashboard.users.models
import uuid
import uuid_upload_path.storage
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('image', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=uuid_upload_path.storage.upload_to, verbose_name='image')),
                ('image_poi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name="image's Point of Interest")),
                ('full_name', models.CharField(blank=True, help_text='Should include first, middle and last name. No need for title', max_length=255, verbose_name='Full Name')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='email address')),
                ('user_name', models.CharField(blank=True, max_length=255, null=True, unique=True, verbose_name='User Name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(db_index=True, default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(db_index=True, default=datetime.datetime.now, verbose_name='date joined')),
                ('is_verified', models.BooleanField(db_index=True, default=False, verbose_name='Is Verified')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'ordering': ('-date_joined',),
            },
            managers=[
                ('objects', ltt_dashboard.users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='SocialAuth',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('account_id', models.CharField(db_index=True, max_length=50, verbose_name='Account Id')),
                ('provider', models.CharField(choices=[('google', 'Google')], max_length=8, verbose_name='Provider')),
                ('image_url', models.CharField(blank=True, max_length=500, null=True, verbose_name='Profile Image Url')),
                ('extra_data', models.TextField(verbose_name='Extra Data')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='social_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social Auth',
                'verbose_name_plural': 'Social Auths',
                'unique_together': {('account_id', 'provider')},
            },
        ),
    ]
